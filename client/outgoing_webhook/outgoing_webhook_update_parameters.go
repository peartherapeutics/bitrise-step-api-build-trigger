// Code generated by go-swagger; DO NOT EDIT.

package outgoing_webhook

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/peartherapeutics/bitrise-step-api-build-trigger/models"
)

// NewOutgoingWebhookUpdateParams creates a new OutgoingWebhookUpdateParams object
// with the default values initialized.
func NewOutgoingWebhookUpdateParams() *OutgoingWebhookUpdateParams {
	var ()
	return &OutgoingWebhookUpdateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewOutgoingWebhookUpdateParamsWithTimeout creates a new OutgoingWebhookUpdateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewOutgoingWebhookUpdateParamsWithTimeout(timeout time.Duration) *OutgoingWebhookUpdateParams {
	var ()
	return &OutgoingWebhookUpdateParams{

		timeout: timeout,
	}
}

// NewOutgoingWebhookUpdateParamsWithContext creates a new OutgoingWebhookUpdateParams object
// with the default values initialized, and the ability to set a context for a request
func NewOutgoingWebhookUpdateParamsWithContext(ctx context.Context) *OutgoingWebhookUpdateParams {
	var ()
	return &OutgoingWebhookUpdateParams{

		Context: ctx,
	}
}

// NewOutgoingWebhookUpdateParamsWithHTTPClient creates a new OutgoingWebhookUpdateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewOutgoingWebhookUpdateParamsWithHTTPClient(client *http.Client) *OutgoingWebhookUpdateParams {
	var ()
	return &OutgoingWebhookUpdateParams{
		HTTPClient: client,
	}
}

/*OutgoingWebhookUpdateParams contains all the parameters to send to the API endpoint
for the outgoing webhook update operation typically these are written to a http.Request
*/
type OutgoingWebhookUpdateParams struct {

	/*AppSlug
	  App slug

	*/
	AppSlug string
	/*AppWebhookSlug
	  App webhook slug

	*/
	AppWebhookSlug string
	/*AppWebhookUpdateParams
	  App webhook update params

	*/
	AppWebhookUpdateParams *models.V0AppWebhookUpdateParams

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the outgoing webhook update params
func (o *OutgoingWebhookUpdateParams) WithTimeout(timeout time.Duration) *OutgoingWebhookUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the outgoing webhook update params
func (o *OutgoingWebhookUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the outgoing webhook update params
func (o *OutgoingWebhookUpdateParams) WithContext(ctx context.Context) *OutgoingWebhookUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the outgoing webhook update params
func (o *OutgoingWebhookUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the outgoing webhook update params
func (o *OutgoingWebhookUpdateParams) WithHTTPClient(client *http.Client) *OutgoingWebhookUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the outgoing webhook update params
func (o *OutgoingWebhookUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAppSlug adds the appSlug to the outgoing webhook update params
func (o *OutgoingWebhookUpdateParams) WithAppSlug(appSlug string) *OutgoingWebhookUpdateParams {
	o.SetAppSlug(appSlug)
	return o
}

// SetAppSlug adds the appSlug to the outgoing webhook update params
func (o *OutgoingWebhookUpdateParams) SetAppSlug(appSlug string) {
	o.AppSlug = appSlug
}

// WithAppWebhookSlug adds the appWebhookSlug to the outgoing webhook update params
func (o *OutgoingWebhookUpdateParams) WithAppWebhookSlug(appWebhookSlug string) *OutgoingWebhookUpdateParams {
	o.SetAppWebhookSlug(appWebhookSlug)
	return o
}

// SetAppWebhookSlug adds the appWebhookSlug to the outgoing webhook update params
func (o *OutgoingWebhookUpdateParams) SetAppWebhookSlug(appWebhookSlug string) {
	o.AppWebhookSlug = appWebhookSlug
}

// WithAppWebhookUpdateParams adds the appWebhookUpdateParams to the outgoing webhook update params
func (o *OutgoingWebhookUpdateParams) WithAppWebhookUpdateParams(appWebhookUpdateParams *models.V0AppWebhookUpdateParams) *OutgoingWebhookUpdateParams {
	o.SetAppWebhookUpdateParams(appWebhookUpdateParams)
	return o
}

// SetAppWebhookUpdateParams adds the appWebhookUpdateParams to the outgoing webhook update params
func (o *OutgoingWebhookUpdateParams) SetAppWebhookUpdateParams(appWebhookUpdateParams *models.V0AppWebhookUpdateParams) {
	o.AppWebhookUpdateParams = appWebhookUpdateParams
}

// WriteToRequest writes these params to a swagger request
func (o *OutgoingWebhookUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param app-slug
	if err := r.SetPathParam("app-slug", o.AppSlug); err != nil {
		return err
	}

	// path param app-webhook-slug
	if err := r.SetPathParam("app-webhook-slug", o.AppWebhookSlug); err != nil {
		return err
	}

	if o.AppWebhookUpdateParams != nil {
		if err := r.SetBodyParam(o.AppWebhookUpdateParams); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
