// Code generated by go-swagger; DO NOT EDIT.

package build_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/peartherapeutics/bitrise-step-api-build-trigger/models"
)

// BuildRequestListReader is a Reader for the BuildRequestList structure.
type BuildRequestListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BuildRequestListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewBuildRequestListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewBuildRequestListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewBuildRequestListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewBuildRequestListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewBuildRequestListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewBuildRequestListOK creates a BuildRequestListOK with default headers values
func NewBuildRequestListOK() *BuildRequestListOK {
	return &BuildRequestListOK{}
}

/*BuildRequestListOK handles this case with default header values.

OK
*/
type BuildRequestListOK struct {
	Payload *models.V0BuildRequestListResponseModel
}

func (o *BuildRequestListOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-requests][%d] buildRequestListOK  %+v", 200, o.Payload)
}

func (o *BuildRequestListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0BuildRequestListResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildRequestListBadRequest creates a BuildRequestListBadRequest with default headers values
func NewBuildRequestListBadRequest() *BuildRequestListBadRequest {
	return &BuildRequestListBadRequest{}
}

/*BuildRequestListBadRequest handles this case with default header values.

Bad Request
*/
type BuildRequestListBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *BuildRequestListBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-requests][%d] buildRequestListBadRequest  %+v", 400, o.Payload)
}

func (o *BuildRequestListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildRequestListUnauthorized creates a BuildRequestListUnauthorized with default headers values
func NewBuildRequestListUnauthorized() *BuildRequestListUnauthorized {
	return &BuildRequestListUnauthorized{}
}

/*BuildRequestListUnauthorized handles this case with default header values.

Unauthorized
*/
type BuildRequestListUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *BuildRequestListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-requests][%d] buildRequestListUnauthorized  %+v", 401, o.Payload)
}

func (o *BuildRequestListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildRequestListNotFound creates a BuildRequestListNotFound with default headers values
func NewBuildRequestListNotFound() *BuildRequestListNotFound {
	return &BuildRequestListNotFound{}
}

/*BuildRequestListNotFound handles this case with default header values.

Not Found
*/
type BuildRequestListNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *BuildRequestListNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-requests][%d] buildRequestListNotFound  %+v", 404, o.Payload)
}

func (o *BuildRequestListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildRequestListInternalServerError creates a BuildRequestListInternalServerError with default headers values
func NewBuildRequestListInternalServerError() *BuildRequestListInternalServerError {
	return &BuildRequestListInternalServerError{}
}

/*BuildRequestListInternalServerError handles this case with default header values.

Internal Server Error
*/
type BuildRequestListInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *BuildRequestListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-requests][%d] buildRequestListInternalServerError  %+v", 500, o.Payload)
}

func (o *BuildRequestListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
