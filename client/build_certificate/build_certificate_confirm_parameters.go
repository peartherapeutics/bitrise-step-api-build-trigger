// Code generated by go-swagger; DO NOT EDIT.

package build_certificate

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewBuildCertificateConfirmParams creates a new BuildCertificateConfirmParams object
// with the default values initialized.
func NewBuildCertificateConfirmParams() *BuildCertificateConfirmParams {
	var ()
	return &BuildCertificateConfirmParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewBuildCertificateConfirmParamsWithTimeout creates a new BuildCertificateConfirmParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewBuildCertificateConfirmParamsWithTimeout(timeout time.Duration) *BuildCertificateConfirmParams {
	var ()
	return &BuildCertificateConfirmParams{

		timeout: timeout,
	}
}

// NewBuildCertificateConfirmParamsWithContext creates a new BuildCertificateConfirmParams object
// with the default values initialized, and the ability to set a context for a request
func NewBuildCertificateConfirmParamsWithContext(ctx context.Context) *BuildCertificateConfirmParams {
	var ()
	return &BuildCertificateConfirmParams{

		Context: ctx,
	}
}

// NewBuildCertificateConfirmParamsWithHTTPClient creates a new BuildCertificateConfirmParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewBuildCertificateConfirmParamsWithHTTPClient(client *http.Client) *BuildCertificateConfirmParams {
	var ()
	return &BuildCertificateConfirmParams{
		HTTPClient: client,
	}
}

/*BuildCertificateConfirmParams contains all the parameters to send to the API endpoint
for the build certificate confirm operation typically these are written to a http.Request
*/
type BuildCertificateConfirmParams struct {

	/*AppSlug
	  App slug

	*/
	AppSlug string
	/*BuildCertificateSlug
	  Build certificate slug

	*/
	BuildCertificateSlug string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the build certificate confirm params
func (o *BuildCertificateConfirmParams) WithTimeout(timeout time.Duration) *BuildCertificateConfirmParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the build certificate confirm params
func (o *BuildCertificateConfirmParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the build certificate confirm params
func (o *BuildCertificateConfirmParams) WithContext(ctx context.Context) *BuildCertificateConfirmParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the build certificate confirm params
func (o *BuildCertificateConfirmParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the build certificate confirm params
func (o *BuildCertificateConfirmParams) WithHTTPClient(client *http.Client) *BuildCertificateConfirmParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the build certificate confirm params
func (o *BuildCertificateConfirmParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAppSlug adds the appSlug to the build certificate confirm params
func (o *BuildCertificateConfirmParams) WithAppSlug(appSlug string) *BuildCertificateConfirmParams {
	o.SetAppSlug(appSlug)
	return o
}

// SetAppSlug adds the appSlug to the build certificate confirm params
func (o *BuildCertificateConfirmParams) SetAppSlug(appSlug string) {
	o.AppSlug = appSlug
}

// WithBuildCertificateSlug adds the buildCertificateSlug to the build certificate confirm params
func (o *BuildCertificateConfirmParams) WithBuildCertificateSlug(buildCertificateSlug string) *BuildCertificateConfirmParams {
	o.SetBuildCertificateSlug(buildCertificateSlug)
	return o
}

// SetBuildCertificateSlug adds the buildCertificateSlug to the build certificate confirm params
func (o *BuildCertificateConfirmParams) SetBuildCertificateSlug(buildCertificateSlug string) {
	o.BuildCertificateSlug = buildCertificateSlug
}

// WriteToRequest writes these params to a swagger request
func (o *BuildCertificateConfirmParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param app-slug
	if err := r.SetPathParam("app-slug", o.AppSlug); err != nil {
		return err
	}

	// path param build-certificate-slug
	if err := r.SetPathParam("build-certificate-slug", o.BuildCertificateSlug); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
