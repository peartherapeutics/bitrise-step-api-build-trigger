// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/peartherapeutics/bitrise-step-api-build-trigger/models"
)

// UserProfileReader is a Reader for the UserProfile structure.
type UserProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewUserProfileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUserProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUserProfileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserProfileOK creates a UserProfileOK with default headers values
func NewUserProfileOK() *UserProfileOK {
	return &UserProfileOK{}
}

/*UserProfileOK handles this case with default header values.

OK
*/
type UserProfileOK struct {
	Payload *models.V0UserProfileRespModel
}

func (o *UserProfileOK) Error() string {
	return fmt.Sprintf("[GET /me][%d] userProfileOK  %+v", 200, o.Payload)
}

func (o *UserProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0UserProfileRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserProfileUnauthorized creates a UserProfileUnauthorized with default headers values
func NewUserProfileUnauthorized() *UserProfileUnauthorized {
	return &UserProfileUnauthorized{}
}

/*UserProfileUnauthorized handles this case with default header values.

Unauthorized
*/
type UserProfileUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *UserProfileUnauthorized) Error() string {
	return fmt.Sprintf("[GET /me][%d] userProfileUnauthorized  %+v", 401, o.Payload)
}

func (o *UserProfileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserProfileNotFound creates a UserProfileNotFound with default headers values
func NewUserProfileNotFound() *UserProfileNotFound {
	return &UserProfileNotFound{}
}

/*UserProfileNotFound handles this case with default header values.

Not Found
*/
type UserProfileNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *UserProfileNotFound) Error() string {
	return fmt.Sprintf("[GET /me][%d] userProfileNotFound  %+v", 404, o.Payload)
}

func (o *UserProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserProfileInternalServerError creates a UserProfileInternalServerError with default headers values
func NewUserProfileInternalServerError() *UserProfileInternalServerError {
	return &UserProfileInternalServerError{}
}

/*UserProfileInternalServerError handles this case with default header values.

Internal Server Error
*/
type UserProfileInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *UserProfileInternalServerError) Error() string {
	return fmt.Sprintf("[GET /me][%d] userProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *UserProfileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
