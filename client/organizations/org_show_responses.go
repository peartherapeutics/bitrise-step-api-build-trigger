// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/peartherapeutics/bitrise-step-api-build-trigger/models"
)

// OrgShowReader is a Reader for the OrgShow structure.
type OrgShowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrgShowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewOrgShowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewOrgShowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewOrgShowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewOrgShowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewOrgShowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewOrgShowOK creates a OrgShowOK with default headers values
func NewOrgShowOK() *OrgShowOK {
	return &OrgShowOK{}
}

/*OrgShowOK handles this case with default header values.

OK
*/
type OrgShowOK struct {
	Payload *models.V0OrganizationRespModel
}

func (o *OrgShowOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{org-slug}][%d] orgShowOK  %+v", 200, o.Payload)
}

func (o *OrgShowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0OrganizationRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrgShowBadRequest creates a OrgShowBadRequest with default headers values
func NewOrgShowBadRequest() *OrgShowBadRequest {
	return &OrgShowBadRequest{}
}

/*OrgShowBadRequest handles this case with default header values.

Bad Request
*/
type OrgShowBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *OrgShowBadRequest) Error() string {
	return fmt.Sprintf("[GET /organizations/{org-slug}][%d] orgShowBadRequest  %+v", 400, o.Payload)
}

func (o *OrgShowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrgShowUnauthorized creates a OrgShowUnauthorized with default headers values
func NewOrgShowUnauthorized() *OrgShowUnauthorized {
	return &OrgShowUnauthorized{}
}

/*OrgShowUnauthorized handles this case with default header values.

Unauthorized
*/
type OrgShowUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *OrgShowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /organizations/{org-slug}][%d] orgShowUnauthorized  %+v", 401, o.Payload)
}

func (o *OrgShowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrgShowNotFound creates a OrgShowNotFound with default headers values
func NewOrgShowNotFound() *OrgShowNotFound {
	return &OrgShowNotFound{}
}

/*OrgShowNotFound handles this case with default header values.

Not Found
*/
type OrgShowNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *OrgShowNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{org-slug}][%d] orgShowNotFound  %+v", 404, o.Payload)
}

func (o *OrgShowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrgShowInternalServerError creates a OrgShowInternalServerError with default headers values
func NewOrgShowInternalServerError() *OrgShowInternalServerError {
	return &OrgShowInternalServerError{}
}

/*OrgShowInternalServerError handles this case with default header values.

Internal Server Error
*/
type OrgShowInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *OrgShowInternalServerError) Error() string {
	return fmt.Sprintf("[GET /organizations/{org-slug}][%d] orgShowInternalServerError  %+v", 500, o.Payload)
}

func (o *OrgShowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
