// Code generated by go-swagger; DO NOT EDIT.

package builds

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/peartherapeutics/bitrise-step-api-build-trigger/models"
)

// BuildLogReader is a Reader for the BuildLog structure.
type BuildLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BuildLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewBuildLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewBuildLogBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewBuildLogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewBuildLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewBuildLogInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewBuildLogOK creates a BuildLogOK with default headers values
func NewBuildLogOK() *BuildLogOK {
	return &BuildLogOK{}
}

/*BuildLogOK handles this case with default header values.

OK
*/
type BuildLogOK struct {
	Payload *models.V0BuildLogInfoResponseModel
}

func (o *BuildLogOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}/log][%d] buildLogOK  %+v", 200, o.Payload)
}

func (o *BuildLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0BuildLogInfoResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildLogBadRequest creates a BuildLogBadRequest with default headers values
func NewBuildLogBadRequest() *BuildLogBadRequest {
	return &BuildLogBadRequest{}
}

/*BuildLogBadRequest handles this case with default header values.

Bad Request
*/
type BuildLogBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *BuildLogBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}/log][%d] buildLogBadRequest  %+v", 400, o.Payload)
}

func (o *BuildLogBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildLogUnauthorized creates a BuildLogUnauthorized with default headers values
func NewBuildLogUnauthorized() *BuildLogUnauthorized {
	return &BuildLogUnauthorized{}
}

/*BuildLogUnauthorized handles this case with default header values.

Unauthorized
*/
type BuildLogUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *BuildLogUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}/log][%d] buildLogUnauthorized  %+v", 401, o.Payload)
}

func (o *BuildLogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildLogNotFound creates a BuildLogNotFound with default headers values
func NewBuildLogNotFound() *BuildLogNotFound {
	return &BuildLogNotFound{}
}

/*BuildLogNotFound handles this case with default header values.

Not Found
*/
type BuildLogNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *BuildLogNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}/log][%d] buildLogNotFound  %+v", 404, o.Payload)
}

func (o *BuildLogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildLogInternalServerError creates a BuildLogInternalServerError with default headers values
func NewBuildLogInternalServerError() *BuildLogInternalServerError {
	return &BuildLogInternalServerError{}
}

/*BuildLogInternalServerError handles this case with default header values.

Internal Server Error
*/
type BuildLogInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *BuildLogInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}/log][%d] buildLogInternalServerError  %+v", 500, o.Payload)
}

func (o *BuildLogInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
