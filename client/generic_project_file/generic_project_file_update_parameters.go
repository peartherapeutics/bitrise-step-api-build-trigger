// Code generated by go-swagger; DO NOT EDIT.

package generic_project_file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/peartherapeutics/bitrise-step-api-build-trigger/models"
)

// NewGenericProjectFileUpdateParams creates a new GenericProjectFileUpdateParams object
// with the default values initialized.
func NewGenericProjectFileUpdateParams() *GenericProjectFileUpdateParams {
	var ()
	return &GenericProjectFileUpdateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGenericProjectFileUpdateParamsWithTimeout creates a new GenericProjectFileUpdateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGenericProjectFileUpdateParamsWithTimeout(timeout time.Duration) *GenericProjectFileUpdateParams {
	var ()
	return &GenericProjectFileUpdateParams{

		timeout: timeout,
	}
}

// NewGenericProjectFileUpdateParamsWithContext creates a new GenericProjectFileUpdateParams object
// with the default values initialized, and the ability to set a context for a request
func NewGenericProjectFileUpdateParamsWithContext(ctx context.Context) *GenericProjectFileUpdateParams {
	var ()
	return &GenericProjectFileUpdateParams{

		Context: ctx,
	}
}

// NewGenericProjectFileUpdateParamsWithHTTPClient creates a new GenericProjectFileUpdateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGenericProjectFileUpdateParamsWithHTTPClient(client *http.Client) *GenericProjectFileUpdateParams {
	var ()
	return &GenericProjectFileUpdateParams{
		HTTPClient: client,
	}
}

/*GenericProjectFileUpdateParams contains all the parameters to send to the API endpoint
for the generic project file update operation typically these are written to a http.Request
*/
type GenericProjectFileUpdateParams struct {

	/*AppSlug
	  App slug

	*/
	AppSlug string
	/*GenericProjectFile
	  Generic project file parameters

	*/
	GenericProjectFile *models.V0ProjectFileStorageDocumentUpdateParams
	/*GenericProjectFileSlug
	  Generic project file slug

	*/
	GenericProjectFileSlug string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the generic project file update params
func (o *GenericProjectFileUpdateParams) WithTimeout(timeout time.Duration) *GenericProjectFileUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the generic project file update params
func (o *GenericProjectFileUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the generic project file update params
func (o *GenericProjectFileUpdateParams) WithContext(ctx context.Context) *GenericProjectFileUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the generic project file update params
func (o *GenericProjectFileUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the generic project file update params
func (o *GenericProjectFileUpdateParams) WithHTTPClient(client *http.Client) *GenericProjectFileUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the generic project file update params
func (o *GenericProjectFileUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAppSlug adds the appSlug to the generic project file update params
func (o *GenericProjectFileUpdateParams) WithAppSlug(appSlug string) *GenericProjectFileUpdateParams {
	o.SetAppSlug(appSlug)
	return o
}

// SetAppSlug adds the appSlug to the generic project file update params
func (o *GenericProjectFileUpdateParams) SetAppSlug(appSlug string) {
	o.AppSlug = appSlug
}

// WithGenericProjectFile adds the genericProjectFile to the generic project file update params
func (o *GenericProjectFileUpdateParams) WithGenericProjectFile(genericProjectFile *models.V0ProjectFileStorageDocumentUpdateParams) *GenericProjectFileUpdateParams {
	o.SetGenericProjectFile(genericProjectFile)
	return o
}

// SetGenericProjectFile adds the genericProjectFile to the generic project file update params
func (o *GenericProjectFileUpdateParams) SetGenericProjectFile(genericProjectFile *models.V0ProjectFileStorageDocumentUpdateParams) {
	o.GenericProjectFile = genericProjectFile
}

// WithGenericProjectFileSlug adds the genericProjectFileSlug to the generic project file update params
func (o *GenericProjectFileUpdateParams) WithGenericProjectFileSlug(genericProjectFileSlug string) *GenericProjectFileUpdateParams {
	o.SetGenericProjectFileSlug(genericProjectFileSlug)
	return o
}

// SetGenericProjectFileSlug adds the genericProjectFileSlug to the generic project file update params
func (o *GenericProjectFileUpdateParams) SetGenericProjectFileSlug(genericProjectFileSlug string) {
	o.GenericProjectFileSlug = genericProjectFileSlug
}

// WriteToRequest writes these params to a swagger request
func (o *GenericProjectFileUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param app-slug
	if err := r.SetPathParam("app-slug", o.AppSlug); err != nil {
		return err
	}

	if o.GenericProjectFile != nil {
		if err := r.SetBodyParam(o.GenericProjectFile); err != nil {
			return err
		}
	}

	// path param generic-project-file-slug
	if err := r.SetPathParam("generic-project-file-slug", o.GenericProjectFileSlug); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
